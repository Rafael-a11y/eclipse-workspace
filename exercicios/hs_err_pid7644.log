#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for ChunkPool::allocate
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (./open/src/hotspot/share/memory/arena.cpp:79), pid=7644, tid=9664
#
# JRE version: Java(TM) SE Runtime Environment (14.0.1+7) (build 14.0.1+7)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (14.0.1+7, mixed mode, sharing, tiered, compressed oops, serial gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=Cp1252 excecao.ChecadaVsNaoChecada

Host: Intel(R) Core(TM) i3 CPU       M 370  @ 2.40GHz, 4 cores, 1G,  Windows 10 , 64 bit Build 18362 (10.0.18362.1110)
Time: Sat Dec  5 14:21:32 2020  elapsed time: 5 seconds (0d 0h 0m 5s)

---------------  T H R E A D  ---------------

Current thread (0x00000195a19e5000):  JavaThread "C2 CompilerThread0" daemon [_thread_in_vm, id=9664, stack(0x0000002adbb00000,0x0000002adbc00000)]

Stack: [0x0000002adbb00000,0x0000002adbc00000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x5f840a]